
  // setNumber → 상태를 바꾸는 함수(update 함수)
  // useState() => 초기값. useState()라는 React Hook 함수를 통해 한 쌍으로 생성된 변수들
  // state — 현재 상태값을 저장하는 변수
  // setState() — 그 값을 변경하는 전용 함수


Hook은 React의 “내장 함수”로, 함수형 컴포넌트에서도 상태(state)·생명주기(lifecycle)·참조(ref) 등을 사용할 수 있게 해주는 도구
“함수형 컴포넌트 내부에서만” 호출할 수 있음

// 대괄호 [] = > 순서가 있는 값들의 리스트형 데이터를 표현할 때 or 배열 비구조화 할당으로 요소를 꺼낼 때 사용
// 중괄호 {} => 이름(key)과 값(value)의 쌍으로 이루어진 데이터 묶음을 표현할 때 사용
//  소괄호 안 중괄호 ({}) =>  props 객체에서 필요한 값만 꺼내서 변수로 받는 구조

// ...inputs => 기존 상태 복사


※ 비구조화 할당(구조분해, Destructuring Assignment) 의 핵심은 “배열/객체에서 값을 꺼내 변수로 빠르게 바인딩하는 문법

1) 배열 비구조화 => 배열은 순서로 매칭
2) 객체 비구조화 => 객체는 키 이름으로 매칭(순서무관)
3) 중첩 구조
4) 기본값 + 별칭 + 중첩 한 번에
5) 함수 매개변수에서의 비구조화 
	-(1) 객체 매개변수
	-(2) 배열 매개변수
6) React에서 자주 쓰는 패턴
	-(1) props 비구조화
	-(2) useState
	-(3) form 상태 객체
7) 계산된 속성명(Computed Property)과 함께


onRemove 삭제버튼 -> 삭제라는 개념 없음. 클릭한 user항목을 제외한 나머지들만 보여주게 걸러줘라. 
걸 러 줘 라?? 콜백함수 개념임?

제이쿼리에서는 $는 클래스 앞에 붙이는건데 
리액트에서는 자바스크립트의 변수나 표현식을 문자열(백틱) 안에 삽입


slice()메서드는 원본을 수정하지 않고 배열이나 문자열의 일부를 추출하여 새 배열이나 문자열로 반환하는 데 사용
→ 만약 products 배열이 다음과 같다고 해볼게요:

const products = [
  { name: "메인상품", img: "main.jpg", category: "추천" },
  { name: "보조상품1", img: "sub1.jpg", category: "신상" },
  { name: "보조상품2", img: "sub2.jpg", category: "인기" }
];
그러면 products.slice(1)은:

[
  { name: "보조상품1", img: "sub1.jpg", category: "신상" },
  { name: "보조상품2", img: "sub2.jpg", category: "인기" }
]
즉 👉
첫 번째 상품(메인 상품) 은 제외하고,
그 다음 상품들(사이드 상품) 만 화면에 렌더링합니다.